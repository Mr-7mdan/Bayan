/* Hide scrollbars utility (preserve scrolling) */
.no-scrollbar {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}
.no-scrollbar::-webkit-scrollbar {
  display: none; /* Chrome, Safari, Opera */
}
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Quill theme */
@import 'quill/dist/quill.snow.css';

/* Light theme — neutral, limited palette */
:root {
  --background: 0 0% 100%;
  --foreground: 222 47% 11%;
  --muted: 220 14% 97%;
  --muted-foreground: 220 9% 46%;
  /* Surfaces for depth (lighter = elevated) */
  --surface-0: var(--background);
  --surface-1: 0 0% 100%;
  --surface-2: 220 14% 98%;
  --surface-3: 220 14% 96%;
  --card: var(--surface-1);
  --card-foreground: var(--foreground);
  --popover: var(--surface-1);
  --popover-foreground: var(--foreground);
  --border: 220 13% 90%;
  --input: 220 13% 90%;
  --ring: 224 70% 50%;
  /* Desaturated accents in light */
  --primary: 224 72% 52%;
  --primary-foreground: 210 0% 98%;
  --secondary: var(--surface-3);
  --secondary-foreground: var(--foreground);
  --accent: 262 60% 54%;
  --accent-foreground: 210 0% 98%;
  /* Status tokens (muted vs. light) */
  --success: 152 45% 44%;
  --warning: 38 90% 50%;
  --danger: 347 62% 49%;
  /* Chart palette (categorical), slightly desaturated */
  --chart-1: 200 85% 42%;
  --chart-2: 330 70% 57%;
  --chart-3: 40 90% 54%;
  --chart-4: 262 62% 56%;
  --chart-5: 152 50% 46%;
  /* UI accents */
  --header-accent: var(--primary);
  /* Topbar fixed color (same in light & dark) */
  --topbar-bg: 199 100% 8%; /* #001C29 */
  --topbar-fg: 200 18% 86%; /* #D3D9DC */
  /* Text scale from image */
  --text-1: 200 17% 48%; /* #69808C */
  --text-2: 200 10% 66%; /* ~#9EA8AE */
  --text-3: 200 18% 86%; /* #D3D9DC */
  /* Button accents (light mode slightly lighter) */
  --btn1: 13 100% 74%;  /* ~#FF7F5C lighter */
  --btn2: 45 100% 74%;  /* ~#FFD65C lighter */
  --btn3: 129 60% 52%;  /* ~#21CC3A lighter */
  --btn4: 227 86% 52%;  /* ~#0636C4 lighter */
  --border-width: 1px;
}

/* Dark theme — avoid pure black/white, desaturate, communicate depth */
.dark {
  /* Backgrounds from image */
  /* --background: 199.5 60% 7.1%;  /*requested custom hsl */
  --background: 199, 98.5%, 8.1%;
  --foreground: var(--text-3); /* #D3D9DC */
  --muted: 199 64% 15%;        /* #0E2F3F */
  --muted-foreground: var(--text-2); /* #9EA8AE */
  /* Surfaces (higher elevation is a bit lighter) */
  --surface-0: var(--background);
  --surface-1: 199 64% 13%;  /* between #001C29 and #0E2F3F */
  --surface-2: 199 64% 15%;  /* #0E2F3F */
  --surface-3: 199 54% 16%;  /* #194054 */
  --card: var(--surface-3);  /* more elevated */
  --card-foreground: var(--foreground);
  --popover: var(--surface-1);
  --popover-foreground: var(--foreground);
  --border: 199 20% 32%;     /* slightly brighter border */
  --input: 199 20% 32%;
  --ring: 224 60% 55%;
  /* Desaturated accents in dark */
  --primary: 224 60% 56%;
  --primary-foreground: 210 18% 96%;
  --secondary: var(--surface-2);
  --secondary-foreground: var(--foreground);
  --accent: 262 48% 60%;
  --accent-foreground: 210 18% 96%;
  --success: 152 42% 52%;
  --warning: 38 80% 56%;
  --danger: 347 55% 56%;
  --chart-1: 200 70% 48%;
  --chart-2: 330 60% 62%;
  --chart-3: 40 80% 58%;
  --chart-4: 262 55% 60%;
  --chart-5: 152 48% 52%;
  /* Prefer neutral header accents (avoid heavy color strips) */
  --header-accent: var(--border);
  /* Button accents (dark mode exact colors) */
  --btn1: 13 100% 68%;   /* #FF7F5C */
  --btn2: 45 100% 68%;   /* #FFD65C */
  --btn3: 129 72% 46%;   /* #21CC3A */
  --btn4: 227 94% 40%;   /* #0636C4 */
}

/* Blackish dark variant */
.dark[data-variant="blackish"] {
  --background: 220 15% 8%;
  --foreground: 210 18% 96%;
  --muted: 220 15% 12%;
  --muted-foreground: 215 16% 72%;
  --surface-0: 220 15% 8%;
  --surface-1: 220 15% 10%;
  --surface-2: 220 15% 12%;
  --surface-3: 220 15% 14%;
  --card: 220 15% 14%;
  --card-foreground: 210 18% 96%;
  --popover: 220 15% 10%;
  --popover-foreground: 210 18% 96%;
  --border: 220 8% 20%;
  --input: 220 8% 20%;
  --ring: 224 60% 55%;
  --primary: 224 60% 56%;
  --primary-foreground: 210 18% 96%;
  --secondary: 220 15% 12%;
  --secondary-foreground: 210 18% 96%;
  --accent: 262 48% 60%;
  --accent-foreground: 210 18% 96%;
  --success: 152 42% 52%;
  --warning: 38 80% 56%;
  --danger: 347 55% 56%;
  --chart-1: 200 70% 48%;
  --chart-2: 330 60% 62%;
  --chart-3: 40 80% 58%;
  --chart-4: 262 55% 60%;
  --chart-5: 152 48% 52%;
  --header-accent: 220 8% 20%;
  --btn1: 13 100% 68%;
  --btn2: 45 100% 68%;
  --btn3: 129 72% 46%;
  --btn4: 227 94% 40%;
  --topbar-bg: 220 15% 8%;
  --topbar-fg: 210 18% 96%;
}

/* Removed blanket border resets in dark mode to avoid breaking component borders (e.g., Tremor Buttons) */

/* DataGrid: hide inner borders in dark mode */
.dark .MuiDataGrid-root, .dark .MuiDataGrid-root * { border: 0 !important; }
.dark .MuiDataGrid-root .MuiDataGrid-row { border: 0 !important; }
.dark .MuiDataGrid-root .MuiDataGrid-columnHeaders { border-bottom: 0 !important; }
.dark .MuiDataGrid-root .MuiDataGrid-cell { border-bottom: 0 !important; }

html, body, #__next { height: 100%; }

/* MUI DataGrid theming to match sample density */
.MuiDataGrid-root {
  --dg-header-bg: hsl(var(--muted));
  --dg-header-fg: hsl(var(--foreground));
}
.dark .MuiDataGrid-root {
  --dg-header-bg: hsl(var(--secondary));
  --dg-header-fg: hsl(var(--foreground));
}

.MuiDataGrid-root .MuiDataGrid-columnHeaders {
  background: var(--dg-header-bg);
  color: var(--dg-header-fg);
  min-height: 28px !important;
  max-height: 28px !important;
}
.MuiDataGrid-root .MuiDataGrid-columnHeaderTitleContainer {
  padding-top: 4px;
  padding-bottom: 4px;
}
.MuiDataGrid-root .MuiDataGrid-row {
  max-height: 28px !important;
}
.MuiDataGrid-root .MuiDataGrid-cell {
  min-height: 28px !important;
  line-height: 28px !important;
}

/* Sidebar / Navbar helper classes per design guide */
.bg-sidebar-light { @apply bg-[hsl(var(--secondary))] border-r border-[hsl(var(--border))] text-[hsl(var(--foreground))]; }
.sidebar-item-light { @apply flex items-center gap-2 px-4 py-2 rounded-md text-sm font-normal text-gray-700 hover:bg-gray-100 hover:text-gray-900 transition-colors duration-150; }
.sidebar-item-active-light { @apply bg-white text-blue-600 border border-[hsl(var(--border))] font-normal; }

.bg-sidebar-dark { @apply bg-[hsl(var(--surface-1))] border-r border-[hsl(var(--border))] text-[hsl(var(--foreground))]; }
/* Use explicit color values to avoid Tailwind @apply arbitrary failures */
.sidebar-item-dark { @apply flex items-center gap-2 px-4 py-2.5 rounded-md text-sm font-normal hover:bg-gray-800 transition-colors duration-150; color: hsl(var(--foreground)); }
.sidebar-item-dark:hover { color: hsl(var(--foreground)); }
.sidebar-item-active-dark { @apply bg-white/10 border border-[hsl(var(--border))] font-normal; color: hsl(var(--foreground)); }

/* Ensure dark variant always wins when both light & dark classes are present */
.dark .sidebar-item-dark { color: hsl(var(--foreground)) !important; }
.dark .sidebar-item-active-dark { color: hsl(var(--foreground)) !important; }
/* If components include both light and dark classes, set dark mode tones explicitly */
.dark .sidebar-item-light { color: hsl(var(--muted-foreground)) !important; }
.dark .sidebar-item-light:hover { color: rgb(55 65 81) !important; } /* gray-700 */
.dark .sidebar-item-active-light { color: rgb(96 165 250) !important; } /* blue-400 */

.bg-navbar-light { @apply bg-white border-b border-[hsl(var(--border))] text-gray-900; }
.nav-item-light { @apply text-gray-600 hover:text-gray-900 transition-colors duration-150; }
.nav-item-active-light { @apply text-blue-600 border-b-2 border-blue-600 font-medium; }

.bg-navbar-dark { @apply bg-gray-950 border-b border-[hsl(var(--border))] text-gray-200; }
.nav-item-dark { @apply text-gray-400 hover:text-white transition-colors duration-150; }
.nav-item-active-dark { @apply text-blue-400 border-b-2 border-blue-400 font-medium; }

/* Hard-disable glows/shadows globally */
.shadow, .shadow-sm, .shadow-md, .shadow-lg, .shadow-xl, .shadow-2xl, .shadow-inner, .shadow-card { box-shadow: none !important; }
[class*="shadow-"] { box-shadow: none !important; }
.drop-shadow, [class*="drop-shadow"] { filter: none !important; box-shadow: none !important; }

/* Simple entry animation for tab panel switches */
@keyframes fadeSlideIn {
  0% { opacity: 0; transform: translateY(4px); }
  100% { opacity: 1; transform: translateY(0); }
}
.anim-fade-slide { animation: fadeSlideIn 180ms ease-out; }

/* Horizontal slide variants for tab switching */
@keyframes slideRightIn {
  0% { opacity: 0; transform: translateX(-36px); }
  100% { opacity: 1; transform: translateX(0); }
}
@keyframes slideLeftIn {
  0% { opacity: 0; transform: translateX(36px); }
  100% { opacity: 1; transform: translateX(0); }
}
.no-scrollbar::-webkit-scrollbar { display: none; }
.no-scrollbar { -ms-overflow-style: none; scrollbar-width: none; }

html, body { max-width: 100%; overflow-x: hidden; }
.anim-slide-right { animation: slideRightIn 360ms cubic-bezier(0.22, 1, 0.36, 1); }
.anim-slide-left { animation: slideLeftIn 360ms cubic-bezier(0.22, 1, 0.36, 1); }

/* Subtle bottom elevation for container outline without global glow utilities */
.elev-bottom {
  box-shadow: 0 1px 0 0 rgba(17, 24, 39, 0.04), 0 12px 20px -14px rgba(17, 24, 39, 0.14) !important;
}
.dark .elev-bottom {
  box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.35), 0 12px 20px -14px rgba(0, 0, 0, 0.55) !important;
}

/* Smooth pulse border using ring color (thickness + opacity) */
@keyframes pulseBorder {
  0% { opacity: 0.65; transform: scale(1); border-width: 2px; }
  50% { opacity: 0.28; transform: scale(1.015); border-width: 3px; }
  100% { opacity: 0.65; transform: scale(1); border-width: 2px; }
}
.pulse-border::after {
  content: "";
  position: absolute;
  inset: -2px; /* extend slightly to sit outside inner border */
  border-radius: inherit;
  border: 2px solid hsl(var(--ring));
  opacity: 0.6;
  will-change: transform, opacity, border-width;
  animation: pulseBorder 1.8s ease-in-out infinite;
  pointer-events: none;
  z-index: 2;
}
@media (prefers-reduced-motion: reduce) {
  .pulse-border::after { animation: none; opacity: 1; }
}

 /* Hover overlay that tints the entire element (uses ring hue with low opacity) */
 .hover-cover { overflow: hidden; }
 .hover-cover > * { position: relative; z-index: 0; }
 .hover-cover::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  background-color: hsl(var(--ring) / 0.22);
  opacity: 0;
  transition: opacity 180ms ease;
  pointer-events: none;
  z-index: 1;
 }
.group:hover .hover-cover::before,
.group:focus-visible .hover-cover::before {
  opacity: 1;
}
 /* Dark mode can use a slightly stronger overlay for contrast */
 .dark .hover-cover::before { background-color: hsl(var(--ring) / 0.30); }

/* Dashboard Builder dark-mode tweaks (scoped)
   - Keep bluish styling only for bluish variant
   - Allow blackish to use neutral tokens */
.dark[data-variant="bluish"] .builder-root {
  /* Approximate #2c3239 in HSL for components using var(--border) */
  --border: 212 13% 20%;
}
.dark[data-variant="bluish"] .builder-root .bg-card {
  /* Requested: hsl(199deg 89.19% 11.01% / 61%) */
  /* background-color: hsl(199deg 89.19% 11.01% / 61%) !important; */
  background-color: hsl(203, 73%, 13%) !important;
}
.dark[data-variant="bluish"] .builder-root .border,
.dark[data-variant="bluish"] .builder-root .border-b,
.dark[data-variant="bluish"] .builder-root .border-t,
.dark[data-variant="bluish"] .builder-root .border-l,
.dark[data-variant="bluish"] .builder-root .border-r {
  border-color: #2c3239 !important;
}
/* Ensure blackish variant uses neutral tokens for builder surfaces */
.dark[data-variant="blackish"] .builder-root .bg-card {
  background-color: hsl(var(--card)) !important;
}
.dark[data-variant="blackish"] .builder-root .border,
.dark[data-variant="blackish"] .builder-root .border-b,
.dark[data-variant="blackish"] .builder-root .border-t,
.dark[data-variant="blackish"] .builder-root .border-l,
.dark[data-variant="blackish"] .builder-root .border-r {
  border-color: hsl(var(--border)) !important;
}

/* Shared With Me dark-mode surface match */
.dark .shared-root {
  /* Ensure surfaces match page background */
  --surface-3: var(--background);
  --card: var(--background);
}

/* Form controls: unify label/input typography with tab labels */
/* Tabs use a muted foreground by default; apply similar tone and size to labels and inputs */
label, .form-label {
  font-size: 0.875rem; /* text-sm */
  color: hsl(var(--muted-foreground));
}

input,
select,
textarea {
  font-size: 0.875rem !important; /* text-sm */
  line-height: 1.25rem !important; /* leading-5 */
  color: hsl(var(--muted-foreground)); /* match tab label tone */
}

input::placeholder,
textarea::placeholder {
  color: hsl(var(--muted-foreground));
  opacity: 0.65; /* slightly lighter than input text */
}

/* Keep borders and corners subtle and consistent */
input, select, textarea {
  border: var(--border-width) solid hsl(var(--border));
  border-radius: 0.5rem; /* rounded-md */
  background-color: hsl(var(--card));
}

/* Default border color for Tailwind border utilities when no explicit color class is present */
.border:not([class*=" border-"]) {
  border-color: hsl(var(--border));
  border-width: var(--border-width);
}
.border-t:not([class*="border-t-"]) {
  border-top-color: hsl(var(--border));
  border-top-width: var(--border-width);
}
.border-b:not([class*="border-b-"]) {
  border-bottom-color: hsl(var(--border));
  border-bottom-width: var(--border-width);
}
.border-l:not([class*="border-l-"]) {
  border-left-color: hsl(var(--border));
  border-left-width: var(--border-width);
}
.border-r:not([class*="border-r-"]) {
  border-right-color: hsl(var(--border));
  border-right-width: var(--border-width);
}
.border-x:not([class*="border-x-"]) {
  border-left-color: hsl(var(--border));
  border-right-color: hsl(var(--border));
  border-left-width: var(--border-width);
  border-right-width: var(--border-width);
}
.border-y:not([class*="border-y-"]) {
  border-top-color: hsl(var(--border));
  border-bottom-color: hsl(var(--border));
  border-top-width: var(--border-width);
  border-bottom-width: var(--border-width);
}

/* Normalize Tremor Card border color to our token (width left to component default) */
.tremor-Card {
  border-color: hsl(var(--border));
}

/* Normalize ring color site-wide to avoid bright outlines in dark mode */
[class*="ring-"] {
  --tw-ring-color: hsl(var(--border)) !important;
  --tw-ring-offset-color: transparent !important;
}
.tremor-Card, .tremor-TextInput, .tremor-Select {
  --tw-ring-color: hsl(var(--border)) !important;
}

/* Default divide color/width when using Tailwind divide utilities without explicit color */
.divide-y > :not([hidden]) ~ :not([hidden]) {
  border-top-color: hsl(var(--border));
  border-top-width: var(--border-width);
}
.divide-x > :not([hidden]) ~ :not([hidden]) {
  border-left-color: hsl(var(--border));
  border-left-width: var(--border-width);
}

/* Map common Tailwind gray/white border utilities to token in dark mode to avoid bright borders */
.dark .border-gray-100, .dark .border-gray-200, .dark .border-gray-300, .dark .border-gray-400, .dark .border-white { border-color: hsl(var(--border)) !important; }
.dark .hover\:border-gray-100:hover, .dark .hover\:border-gray-200:hover, .dark .hover\:border-gray-300:hover, .dark .hover\:border-gray-400:hover, .dark .hover\:border-white:hover { border-color: hsl(var(--border)) !important; }
/* Catch-all for gray variants that may not be enumerated */
.dark [class*="border-gray-"] { border-color: hsl(var(--border)) !important; }
.dark [class*="divide-gray-"] > :not([hidden]) ~ :not([hidden]) { border-color: hsl(var(--border)) !important; }

/* Solid backgrounds for dropdown/popover menus (Tremor & Headless UI) */
/* Ensure portals/panels for selects and menus don't appear transparent */
[role="listbox"],
[role="menu"],
.tremor-Select [role="listbox"],
.tremor-Dropdown [role="menu"],
.tremor-PopoverPanel {
  background-color: hsl(var(--card)) !important;
  border: 1px solid hsl(var(--border)) !important;
  backdrop-filter: none !important;
  z-index: 90 !important; /* ensure dropdown overlays builder panels */
  font-size: 0.75rem !important; /* text-xs for popover containers */
  line-height: 1.25rem !important; /* leading-5 */
}

/* Tremor popovers that might not get class-specific selector */
[role="listbox"],
[role="menu"] {
  z-index: 90 !important;
  font-size: 0.75rem !important;
  line-height: 1.25rem !important;
  border-radius: 0.375rem !important; /* rounded-md */
}

/* Nudge Tremor triggers/inputs to our size and radius when not fully controlled via className */
.tremor-Select,
.tremor-TextInput {
  font-size: 0.75rem !important; /* text-xs */
}
.tremor-Select button[aria-haspopup="listbox"],
.tremor-Select button[role="combobox"],
.tremor-Select button[type="button"] {
  height: 2rem !important; /* h-8 */
  border: var(--border-width) solid hsl(var(--border)) !important;
  border-radius: 0.5rem !important; /* rounded-md/lg */
  background-color: hsl(var(--card)) !important;
  box-shadow: none !important; /* suppress ring-like shadows */
  outline: none !important;
}
.tremor-TextInput input {
  height: 2rem !important; /* h-8 */
  border: var(--border-width) solid hsl(var(--border)) !important;
  border-radius: 0.5rem !important;
  background-color: hsl(var(--card)) !important;
}

/* Option rows: default to card bg; hover/active use muted */
[role="option"],
.tremor-SelectItem {
  background-color: hsl(var(--card));
  font-size: 0.75rem !important; /* text-xs for options */
  line-height: 1.25rem !important;
}
[role="option"] + [role="option"],
.tremor-SelectItem + .tremor-SelectItem {
  border-top: 1px solid hsl(var(--border)) !important;
}
[role="option"][aria-selected="true"],
[role="option"]:hover,
.tremor-SelectItem:hover {
  background-color: hsl(var(--muted));
}

/* Override Tailwind compiled selector for dark:bg-gray-900 to custom dark base */
.dark\:bg-gray-900:is(.dark *) {
  background-color: rgb(9 39 57 / var(--tw-bg-opacity, 1)) !important;
}

/* Optional: if any usage relies on plain bg-gray-900 under a dark root */
.dark .bg-gray-900 {
  background-color: rgb(9 39 57 / var(--tw-bg-opacity, 1)) !important;
}

/* Override Tailwind compiled selector for dark:bg-gray-800 */
.dark\:bg-gray-800:is(.dark *) {
  background-color: rgb(31 57 73 / var(--tw-bg-opacity, 1)) !important;
}

/* Optional: plain class usage under .dark root */
.dark .bg-gray-800 {
  background-color: rgb(31 57 73 / var(--tw-bg-opacity, 1)) !important;
}

/* Date inputs: make calendar icon visible in dark mode */
.dark input[type="date"] {
  /* Hint browsers to render built-in controls for dark surfaces */
  color-scheme: dark;
}
.dark input[type="date"]::-webkit-calendar-picker-indicator {
  /* Force light icon on dark backgrounds */
  /* Keep the indicator clickable but invisible; we'll draw our own icon */
  opacity: 0;
}

/* Force card background on legacy inputs that still use bg-background */
input.bg-background,
select.bg-background,
textarea.bg-background {
  background-color: hsl(var(--card)) !important;
}

/* Draw a custom white calendar icon on inputs we mark with .date-input */
.dark .date-input {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%23D3D9DC' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Crect x='3' y='4' width='18' height='18' rx='2' ry='2'/%3E%3Cline x1='16' y1='2' x2='16' y2='6'/%3E%3Cline x1='8' y1='2' x2='8' y2='6'/%3E%3Cline x1='3' y1='10' x2='21' y2='10'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 0.5rem center;
  background-size: 16px 16px;
}

/* Dark-mode tabs inside AddDatasource dialog: readable inactive/active */
.dark .ds-dialog [role="tab"] {
  color: hsl(var(--muted-foreground)) !important;
}
.dark .ds-dialog [role="tab"][data-state="active"] {
  color: hsl(var(--foreground)) !important;
}
.dark .ds-dialog [role="tab"]:hover {
  color: hsl(var(--foreground)) !important;
}

/* Buttons — standardized look (matches Alerts page) */
button,
[type="button"],
[type="submit"],
[role="button"] {
  border-radius: 0.5rem; /* rounded-md */
}
/* Default background for bordered buttons without explicit bg- class */
button.border:not([class*="bg-"]),
[type="button"].border:not([class*="bg-"]),
[type="submit"].border:not([class*="bg-"]) {
  background-color: hsl(var(--card));
}
/* Default rounded for buttons missing rounded- utilities */
button.border:not([class*="rounded-"]),
[type="button"].border:not([class*="rounded-"]),
[type="submit"].border:not([class*="rounded-"]) {
  border-radius: 0.5rem;
}
/* Base .btn utility */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.25rem;
  height: 2rem; /* h-8 */
  padding: 0 0.75rem; /* px-3 */
  font-size: 0.875rem; /* text-sm */
  border: var(--border-width) solid hsl(var(--border));
  border-radius: 0.5rem;
  background-color: hsl(var(--card));
  box-shadow: none;
  outline: none;
}
.btn:hover { background-color: hsl(var(--muted)); }
.btn:focus { box-shadow: none; outline: none; }
.btn:disabled { opacity: 0.5; cursor: not-allowed; }

.btn-primary { background-color: hsl(var(--primary)); border-color: hsl(var(--primary)); color: hsl(var(--primary-foreground)); }
.btn-primary:hover { background-color: hsl(var(--primary)/0.9); }

.btn-secondary { background-color: hsl(var(--card)); border-color: hsl(var(--border)); }
.btn-secondary:hover { background-color: hsl(var(--muted)); }

.btn-outline { background-color: transparent; border-color: hsl(var(--border)); }
.btn-outline:hover { background-color: hsl(var(--muted)); }

.btn-ghost { background-color: transparent; border-color: transparent; }
.btn-ghost:hover { background-color: hsl(var(--muted)); }

.btn-danger { background-color: hsl(var(--danger)); border-color: hsl(var(--danger)); color: white; }
.btn-danger:hover { background-color: hsl(var(--danger)/0.9); }

.btn-xs { height: 1.5rem; padding: 0 0.5rem; font-size: 0.75rem; }
.btn-sm { height: 1.75rem; padding: 0 0.625rem; font-size: 0.8125rem; }

/* Tremor Button alignment */
.tremor-Button {
  border: var(--border-width) solid hsl(var(--border)) !important;
  border-radius: 0.5rem !important;
  background-color: hsl(var(--card)) !important;
  box-shadow: none !important;
}
.tremor-Button:hover { background-color: hsl(var(--muted)) !important; }
.tremor-Button:disabled { opacity: 0.5 !important; cursor: not-allowed !important; }

/* ---------- Contacts: suggestions menu (non-transparent) ---------- */
.suggest-menu {
  background-color: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  color: hsl(var(--foreground));
}
.suggest-menu button { background: transparent; color: inherit; }
.suggest-menu button:hover { background-color: hsl(var(--muted)); }

/* ---------- Quill (Snow) overrides: dark-mode-aware icons & no borders ---------- */
/* Remove default Snow borders to avoid double borders inside the dialog */
.ql-toolbar.ql-snow, .ql-container.ql-snow { border: 0 !important; }
.ql-toolbar.ql-snow { background: transparent !important; }
.ql-container.ql-snow { background: transparent !important; }

/* Toolbar icons (SVG) should follow theme foreground color */
.ql-snow .ql-stroke { stroke: hsl(var(--foreground)) !important; }
.ql-snow .ql-fill { fill: hsl(var(--foreground)) !important; }
.ql-snow .ql-picker { color: hsl(var(--foreground)) !important; }
.ql-snow .ql-picker .ql-picker-options {
  background-color: hsl(var(--card)) !important;
  border: 1px solid hsl(var(--border)) !important;
}
.ql-snow .ql-picker-label:hover, .ql-snow .ql-picker-item:hover,
.ql-snow .ql-formats button:hover { background-color: hsl(var(--muted)) !important; }

/* Editor text + placeholder in both modes */
.ql-editor { color: hsl(var(--foreground)) !important; }
.ql-editor.ql-blank::before { color: hsl(var(--muted-foreground)) !important; }
